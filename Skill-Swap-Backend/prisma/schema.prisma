// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  name     String
  email    String   @unique
  password String
  isAdmin  Boolean  @default(false)

  // Inverse relation
  profile  Profile?

   sentRequests     SwapRequest[] @relation("FromUser")
  receivedRequests SwapRequest[] @relation("ToUser")
}

model Profile {
  id        Int      @id @default(autoincrement())
  bio       String?
  skills    String[]
  location  String?
  userId    Int      @unique
  user      User     @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model SwapRequest {
  id            Int      @id @default(autoincrement())
  fromUserId    Int
  toUserId      Int
  skillNeeded   String
  skillOffered  String
  schedule      String?
  status        String   @default("pending") // pending, accepted, declined

  fromUser      User     @relation("FromUser", fields: [fromUserId], references: [id])
  toUser        User     @relation("ToUser", fields: [toUserId], references: [id])

  createdAt     DateTime @default(now())
}
